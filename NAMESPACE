useDynLib(jl4R, .registration = TRUE)

exportPattern("^\\jl_")
exportPattern("^\\jlR_")
export(
  jl,
  jlValue_eval,
  as.jlValue, is.jlValue,
  R, toR,
  jlrun, jlcall, jlnew, jlcallR,
  jltypeof,
  jlset, jlget,
  jlshow, jldisplay,
  jlusing, jlpkg,
  is.Struct,
  jl2R, jl2R_unsafe
)

#S3methods are not viewable inside the R system. If you want this functionality available put it in the previous export
S3method("as.jlValue",default)
S3method("as.jlValue",jlValue)
S3method("as.jlValue",data.frame)
S3method("as.jlValue",list)
S3method("as.jlValue",integer)
S3method("as.jlValue",double)
S3method("as.jlValue",logical)
S3method("as.jlValue",character)
S3method("as.jlValue",factor)

S3method("names",jlEnv)
S3method("[",jlEnv)
S3method("[[",jlEnv)
S3method("$",jlEnv)
S3method("$<-",jlEnv)
S3method("print",jlEnv)
S3method("@",jlEnv)

S3method("names",Struct)
S3method("[",Struct)
S3method("$",Struct)

S3method("names",NamedTuple)
S3method("[",NamedTuple)
S3method("$",NamedTuple)

S3method("names",Dict)
S3method("[",Dict)
S3method("$",Dict)

S3method("length",Array)
S3method("[",Array)

S3method("names",DataFrame)
S3method("[",DataFrame)
S3method("$",DataFrame)

S3method("levels",CategoricalArray)

S3method(print,jlValue)
S3method(toR,default)
S3method(toR,jlValue)
S3method(toR,DataFrame)
S3method(toR,CategoricalArray)


# S3method(print,jlvector)
# S3method("[<-",jlvector)
# S3method("[[",jlvector)
# S3method("[[<-",jlvector)
# S3method(as.vector,jlvector)
